import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import Loading from "@/components/Loading";
import { checkEmail } from "@/libs/utils";

import { signIn } from "@/libs/cognito";

const Home = () => {
  const [showPassword, setShowPassword] = useState<Boolean>(false);
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [isEmailError, setIsEmailError] = useState<Boolean>(false);
  const [isPasswordError, setIsPasswordError] = useState<Boolean>(false);
  const [isLoading, setIsLoading] = useState<Boolean>(false);

  const submit = async () => {
    setIsEmailError(email == "" || !checkEmail(email));
    setIsPasswordError(password == "");

    if (email != "" && checkEmail(email) && password != "") {
      try {
        setIsLoading(true);
        const response: any = await signIn(email, password);
        console.log("response:", response?.accessToken);
        window.parent.postMessage(
          {
            formSubmitted: true,
            formName: "signin",
            token: response?.accessToken.jwtToken,
          },
          "*"
        );
        setIsLoading(false);
      } catch (err: any) {
        window.parent.postMessage(
          {
            formSubmitted: false,
            formName: "signin",
            error: err.message,
          },
          "*"
        );
        setIsLoading(false);
        console.log(err.message);
      }
    }
  };

  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {
    if (event.key === "Enter") {
      submit();
    }
  };

  return (
    <div>
      <Head>
        <title>Login App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full bg-[#fff]">
        <Header />
        <div
          className={`w-full flex justify-center py-8 ${
            isLoading && "opacity-40"
          }`}
        >
          <div className="w-4/5 sm:w-[60%]">
            <div className="text-[2rem] text-[#212529] font-bold">Sign in</div>
            <div className="text-base text-[#212529] font-medium py-2">
              New to Here?&nbsp;
              <Link href="/signup">
                <span className="text-[#00b3de] underline">
                  Create an account
                </span>
              </Link>
            </div>
            <div className="py-2">
              <input
                type="text"
                className="border-[#9797aa] focus:border-[#00a0c7] form-control w-full block px-4 py-2 text-base font-medium bg-white bg-clip-padding border border-solid  rounded m-0"
                placeholder="Email address"
                value={email}
                onChange={(e: any) => {
                  if (checkEmail(e.target.value)) {
                    setIsEmailError(false);
                  } else {
                    setIsEmailError(true);
                  }
                  setEmail(e.target.value);
                }}
                onKeyDown={handleKeyDown}
              />
              {isEmailError ? (
                email != "" ? (
                  <div className="text-xs text-left text-[#ed0a0a] pt-2">
                    Email is not correct.
                  </div>
                ) : (
                  <div className="text-xs text-left text-[#ed0a0a] pt-2">
                    Email is required.
                  </div>
                )
              ) : (
                ""
              )}
            </div>
            <div className="relative py-2">
              <input
                type={`${showPassword ? "text" : "password"}`}
                className="bg-no-repeat bg-[center_right_0.5rem] border-[#9797aa] focus:border-[#00a0c7] form-control w-full block px-4 py-2 text-base font-medium bg-white bg-clip-padding border border-solid  rounded m-0"
                placeholder="Password"
                value={password}
                onChange={(e: any) => {
                  if (e.target.value != "") {
                    setIsPasswordError(false);
                  } else {
                    setIsPasswordError(true);
                  }
                  setPassword(e.target.value);
                }}
                onKeyDown={handleKeyDown}
              />
              {isPasswordError && (
                <div className="text-xs text-left text-[#ed0a0a] pt-2">
                  Password is required.
                </div>
              )}
              {showPassword ? (
                <Image
                  className="absolute top-5 right-2"
                  width={17}
                  height={15}
                  src="/assets/eyeCrossedOut.svg"
                  alt="eye"
                  onClick={() => setShowPassword(!showPassword)}
                />
              ) : (
                <Image
                  className="absolute top-6 right-2"
                  width={15}
                  height={11}
                  src="/assets/eye.svg"
                  alt="eye"
                  onClick={() => setShowPassword(!showPassword)}
                />
              )}
            </div>
            <div className="py-2">
              <button
                className="w-full bg-[#17a2b8] hover:bg-[#138496] focus:bg-[#138496] text-white text-base font-bold py-2 px-4 border-[#117a8b] rounded cursor-pointer"
                onClick={() => submit()}
              >
                Login
              </button>
            </div>
            <div className="py-2">
              <Link href="/forgot">
                <span className="text-[#00b3de] font-medium">
                  Forgot Password?
                </span>
              </Link>
              &nbsp;or&nbsp;
              <Link href="/code">
                <span className="text-[#00b3de] font-medium">
                  Enter code here
                </span>
              </Link>
            </div>
            <hr className="text-[#c4c4c4] my-2" />
            <Footer />
          </div>
        </div>
        {isLoading && <Loading />}
      </div>
    </div>
  );
};

export default Home;
